apply plugin: 'com.android.application'
/**引用应用GreenDao插件*/
apply plugin: 'org.greenrobot.greendao'

android {
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.common.projectcommonframe"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        // Specifies the ABI configurations of your native
        // libraries Gradle should build and package with your APK.
        ndk {
//            abiFilters "armeabi", "armeabi-v7a", "x86", "mips"
            abiFilters "armeabi", "armeabi-v7a"
        }
        javaCompileOptions { annotationProcessorOptions { includeCompileClasspath = true }}

        /**   Cannot fit requested classes in a single dex file. Try supplying a main-dex list
              原因是Android系统定义总方法数是一个short int，short int 最大值为65536。解决这个问题的方案是：
             在Android的模块gradle文件的defaultConfig默认配置里面增加：  multiDexEnabled true
             同时在dependencies里面增加：
             implementation 'com.android.support:multidex:1.0.3'
             另外需要把AndroidMainfest.xml里面添加自定义的App继承自MultiDexApplication
         */
        multiDexEnabled true
    }

    /**如果libs目录在src目录下面打开下面这个*/
    /*sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }*/

    /**配置签名文件，debug和release用同一个签名文件（方便调试）*/
    signingConfigs {
        debug {
             storeFile file("common_sign.jks")                         //设置的是签名路径。一般是把签名文件放在工程的APP根目录（记得上线时候删除）
//             storeFile file("D:/android_sign/common_sign.jks")    //签名文件配置在本地盘中
            storePassword '123456'
            keyAlias 'key0'
            keyPassword '123456'
        }
        release {
            storeFile file("common_sign.jks")                      //设置的是签名路径。一般是把签名文件放在工程的APP根目录（记得上线时候删除）
//            storeFile file("D:/android_sign/common_sign.jks")    //签名文件配置在本地盘中
            storePassword '123456'
            keyAlias 'key0'
            keyPassword '123456'
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }

        release {
            //签名
            signingConfig signingConfigs.release
            /**是否充许release版本调试*/
            debuggable true
            //Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件(shrinkResources 为true minifyEnable必需为true，不然会报Error:Removing unused resources requires unused code shrinking to be turned on)
            shrinkResources true
            /**是否混淆文件(如果为true proguardFiles会执行)*/
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    //解决库依赖冲突问题
    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
    }

    //为了解决部分第三方库重复打包了META-INF的问题
    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    /* Android Studio编译问题：Error:java.util.concurrent.ExecutionException: com.android.builder.internal.aapt.AaptException:
       这个问题一般会在打包的时候遇到，查阅了网上很多资料都是说因为项目路径过长原因导致，但是其实很多时候并不是的，其主要原因是builde.gradle会在你打包的时候去检查你的res资源，一旦出现不规范就会出现该错误。
       以上是问题所在，解决方案：
       当然解决方案就是我们主动去禁止它检查，即在你Module的builde.gradle中添加以下代码：*/
    aaptOptions.cruncherEnabled = false
    aaptOptions.useNewCruncher = false
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "com.android.support:appcompat-v7:$rootProject.ext.appcompatVersion"
    implementation "com.android.support:support-v4:$rootProject.ext.appcompatVersion"
    implementation "com.android.support:design:$rootProject.ext.appcompatVersion"
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    /*解决dex64K 引用限制*/
    implementation 'com.android.support:multidex:1.0.2'

    /*Greedao 数据库*/
    implementation 'org.greenrobot:greendao:3.2.2'
    implementation 'org.greenrobot:greendao-generator:3.2.2'

    /*事件总线库(适用Activity之间的通信之类的)类似的还有Otto https://github.com/greenrobot/EventBus#add-eventbus-to-your-project */
    implementation 'org.greenrobot:eventbus:3.1.1'

    //KLog https://github.com/ZhaoKaiQiang/KLog  一个Android专用的LogCat工具，主要功能为打印行号、函数调用、Json解析、XML解析、点击跳转、Log信息保存等功能
    implementation 'com.github.zhaokaiqiang.klog:library:1.6.0'

    //处理rxjava内存泄漏,基础组件
    implementation 'com.trello.rxlifecycle2:rxlifecycle:2.0.1'

    //如果你想绑定到Android特定的生命周期
    implementation 'com.trello.rxlifecycle2:rxlifecycle-android:2.0.1'

    //如果你想要预先写好的Activities和Fragments，你可以作为提供者的子类
    implementation 'com.trello.rxlifecycle2:rxlifecycle-components:2.0.1'

    //组件视图绑定依赖
    implementation 'com.jakewharton:butterknife:8.5.1'
    implementation 'com.jakewharton:butterknife-compiler:8.5.1'

    //RxJava2.0所需依赖
    implementation 'io.reactivex.rxjava2:rxjava:2.1.3'

    //Rxandroid2.0线程调度依赖
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'

    // 大神写的这个库可以支持到rxjava2.X
    implementation 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'

    //Retrofit2.0所需依赖
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'

    //结果转为实体类所需依赖
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'

    //RxBinding 是 Jake Wharton 的一个开源库，它提供了一套在 Android 平台上的基于 RxJava的 Binding API。所谓 Binding，就是类似设置 OnClickListener 、设置 TextWatcher 这样的注册绑定对象的 API

    //https://github.com/JakeWharton/RxBinding
    implementation 'com.jakewharton.rxbinding2:rxbinding:2.0.0'

    //    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0' //RxJava2.0+Retrofit2.0适配依赖

    //OKHttp3.0依赖
    implementation 'com.squareup.okhttp3:okhttp:3.9.0'

    //OKHttp优化策略依赖
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.0'

    //结果转为基本类型所需依赖
    implementation 'com.squareup.retrofit2:converter-scalars:2.3.0'

    //dialog https://github.com/pedant/sweet-alert-dialog

    //    api 'cn.pedant.sweetalert:library:1.3'

    /*Android Studio 3.0，Gradle 4.1，升级之后SweetAlertDialog错误，java.lang.RuntimeException: Unknown animation name: cn.pedant.SweetAlert.Rotate3dAnimation error:nul：
                 * 使用下面这个代替 */
    implementation 'com.github.f0ris.sweetalert:library:1.5.1'

    /*动态权限库EasyPermissions https://github.com/googlesamples/easypermissions */
    implementation 'pub.devrel:easypermissions:1.3.0'

    /*下拉刷新列表 https://github.com/XRecyclerView/XRecyclerView */
    implementation 'com.jcodecraeer:xrecyclerview:1.5.9'

    /*一款仿iOS的PickerView控件，有时间选择器和选项选择器 https://github.com/Bigkoo/Android-PickerView */
    implementation 'com.contrarywind:Android-PickerView:4.1.6'

    /*Glide，https://github.com/bumptech/glide 一个被google所推荐的图片加载库，作者是bumptech。这个库被广泛运用在google的开源项目中, 类似的还有：Picasso,Fresco*/
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.8.0'
    implementation 'jp.wasabeef:glide-transformations:3.3.0'

    /*通用的广告栏控件，让你轻松实现广告头效果 https://github.com/Bigkoo/Android-ConvenientBanner */
    implementation 'com.bigkoo:ConvenientBanner:2.1.4'

    /* 网络图片滑动查看，可缩放 https://github.com/chrisbanes/PhotoView  官网示例Demo: https://github.com/davemorrissey/subsampling-scale-image-view */
    implementation 'com.github.chrisbanes:PhotoView:1.3.0'

    /* 图片选择库这个库包含：单选，多选，是否显示拍照，是否预览，是否剪切等一系列功能 https://github.com/ioneday/ImageSelector*/
    //implementation 'com.commit451:PhotoView:1.2.4'    //最新版本用上面的com.github.chrisbanes:PhotoView:1.3.0代替 https://github.com/chrisbanes/PhotoView
    /*    implementation 'com.github.bumptech.glide:glide:3.6.1'  //跟本项目中用的Glide 4.x新版本有冲突，解决方案:使用源码的方式引入进来>
        implementation 'com.isseiaoki:simplecropview:1.0.13'
        implementation 'com.yongchun:com.yongchun.imageselector:1.1.0'*/

    /*腾讯X5内核WebView浏览器jar*/
    implementation files('libs/tbs_sdk_thirdapp_v3.6.0.1325_43613_sharewithdownload_withoutGame_obfs_20180807_151115.jar')

   /* 图片选择库这个库包含：单选，多选，是否显示拍照，是否预览，是否剪切等一系列功能*/
    implementation project(':ImageSelectoLlibrary')
}

greendao {
    //The current version of the database schema  版本
    schemaVersion 1
    //The package name for generated DAOs, DaoMaster, and DaoSession. Defaults to the package name of your source entities
    // '生成文件包名' // 一般为app包名+生成文件的文件夹名
    daoPackage 'com.common.projectcommonframe.dao'
    //The location where generated sources should be stored at. Defaults to the generated source folder inside the build directory ( build/generated/source/greendao).
    // 生成文件路径（默认为app/build/generated/source/greendao/上面指定的daoPackage路径）
    targetGenDir 'src/main/java'
}
